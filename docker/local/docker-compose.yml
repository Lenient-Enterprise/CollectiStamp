version: '3.4'

services:
  # Servicio de la base de datos PostgreSQL
  postgres-db:
    restart: always
    container_name: collecti_stamp_db
    image: postgres:14.9-alpine
    volumes:
      - collecti_stamp_db:/var/lib/postgresql/data
    networks:
      - collecti_stamp
    environment:
      - POSTGRES_PASSWORD=postgres

  # Servicio web de la aplicación Django
  django-app:
    restart: always
    container_name: collecti_stamp_web
    build:
        context: .
        dockerfile: Dockerfile
    image: collecti_stamp_web:latest
    command: ash -c "python mange.py makemigrations && python manage.py migrate && gunicorn -w 5 collecti_stamp.wsgi --timeout=500 -b 0.0.0.0:5000"
    expose:
      - "5000"
    volumes:
      - collecti_stamp_static:/app/collecti_stamp/static
    depends_on:
      - postgres-db
    networks:
      - collecti_stamp

  # Servicio de proxy Nginx
  nginx-proxy:
    restart: always
    container_name: collecti_stamp_nginx
    image: collecti_stamp_nginx:latest
    build:
        context: .
        dockerfile: Dockerfile-nginx
    volumes:
      - collecti_stamp_static:/app/collecti_stamp/static
    ports:
      - "8000:80"
    depends_on:
      - django-app
    networks:
      - collecti_stamp
    labels:
      - "com.example.description=Proxy server with Nginx for Django app"

volumes:
  # Volumen para archivos estáticos
  collecti_stamp_static:
    name: collecti_stamp_static

  # Volumen para la base de datos
  collecti_stamp_db:
    name: collecti_stamp_db

networks:
  # Configuración de la red bridge
  collecti_stamp:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16
